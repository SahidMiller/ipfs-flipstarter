name: GitHub Actions Demo
on: [push]
jobs:
  explore:
    runs-on: ubuntu-latest
    name: explore github action
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Checkout repository code
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Build project
        run: npm run build
      - name: Run tests
        run: npm run test
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Start IPFS
        uses: ibnesayeed/setup-ipfs@master
        with:
          run_daemon: true
          ipfs_version: 0.8
      - name: upload dweb-cash wallet to IPFS
        id: wallet-ipfs
        run: |
          echo "::set-output name=hash::$(ipfs add -rQ ./packages/cash-wallet/public)"
          echo "::set-output name=key::$(echo ${{ secrets.DWEB_WALLET_IPNS_KEY }} | xxd -r -p | ipfs key import wallet_publish -)"
      - name: upload flipstarter client site to IPFS
        id: client-ipfs
        run: |
          echo "::set-output name=hash::$(ipfs add -rQ ./packages/client/public)"
          echo "::set-output name=key::$(echo ${{ secrets.FLIPSTARTER_CLIENT_IPNS_KEY }} | xxd -r -p | ipfs key import client_publish -)"
      - name: upload flipstarter create site to IPFS
        id: create-ipfs
        run: |
          echo "::set-output name=hash::$(ipfs add -rQ ./packages/create/public)"
          echo "::set-output name=key::$(echo ${{ secrets.FLIPSTARTER_CREATE_IPNS_KEY }} | xxd -r -p | ipfs key import create_publish -)"
      - run: |
          curl --write-out '%{http_code}' --silent --output /dev/null --fail https://ipfs.io/ipfs/{{{ steps.wallet-ipfs.outputs.hash }}
          curl --write-out '%{http_code}' --silent --output /dev/null --fail https://ipfs.io/ipfs/${{ steps.client-ipfs.outputs.hash }}
          curl --write-out '%{http_code}' --silent --output /dev/null --fail https://ipfs.io/ipfs/${{ steps.create-ipfs.outputs.hash }}
      - run: |
          ipfs name publish --key=wallet_publish ${{ steps.wallet-ipfs.output.hash }}
          ipfs name publish --key=client_publish ${{ steps.client-ipfs.output.hash }}
          ipfs name publish --key=create_publish ${{ steps.create-ipfs.output.hash }}
      - run: |
          curl --write-out '%{http_code}' --silent --output /dev/null --fail https://ipfs.io/ipns/${{ steps.wallet-ipfs.outputs.key }}
          curl --write-out '%{http_code}' --silent --output /dev/null --fail https://ipfs.io/ipns/${{ steps.client-ipfs.outputs.key }}
          curl --write-out '%{http_code}' --silent --output /dev/null --fail https://ipfs.io/ipns/${{ steps.create-ipfs.outputs.key }}
